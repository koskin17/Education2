/*
Використання декількох умовних (тернарних) операторів
У попередньому завданні ви використовували одинарний умовний оператор. Ви також можете об’єднати їх для того, щоб перевірити декілька умов.

Наступна функція використовує інструкції if, else if та else, щоб перевірити декілька умов:

function findGreaterOrEqual(a, b) {
  if (a === b) {
    return "a and b are equal";
  }
  else if (a > b) {
    return "a is greater";
  }
  else {
    return "b is greater";
  }
}
Вказану вище функцію можна переписати, використовуючи декілька умовних операторів:

function findGreaterOrEqual(a, b) {
  return (a === b) ? "a and b are equal" 
    : (a > b) ? "a is greater" 
    : "b is greater";
}
Найкращою практикою вважають відформатування декількох умовних операторів таким чином, що кожна умова буде знаходитися в окремому рядку, як вказано вище. Використання декількох умовних операторів без правильних відступів може ускладнити читання вашого коду. Наприклад:

function findGreaterOrEqual(a, b) {
  return (a === b) ? "a and b are equal" : (a > b) ? "a is greater" : "b is greater";
}
Використайте декілька умовних операторів у функції checkSign, дотримуючись рекомендованого формату, використаного у findGreaterOrEqual, щоб перевірити, чи число додатнє, від’ємне або дорівнює нулю. Функція повинна повертати positive, negative або zero.
*/

