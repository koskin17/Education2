/*
Використання рекурсії для створення діапазону чисел
Продовжуючи попереднє завдання, ми пропонуємо створити рекурсивну функцію ще раз, щоб розв’язати завдання.

Ми визначили функцію під назвою rangeOfNumbers з двома параметрами. Функція повинна повернути масив цілих чисел, що починається з числа, представленого параметром startNum і закінчується числом, представленим параметром endNum. Початкове число завжди буде меншим або дорівнюватиме кінцевому числу. Ваша функція повинна використовувати рекурсію, викликаючи саму себе, та не повинна використовувати цикли. Вона також повинна працювати, якщо startNum та endNum однакові.
*/

function rangeOfNumbers(startNum, endNum) {
  // Базовий випадок: якщо startNum дорівнює endNum, повертаємо масив з одного числа
  if (startNum === endNum) {
    return [startNum];
  } else {
    // Рекурсивний виклик, отримуємо масив для наступного числа
    const rangeArray = rangeOfNumbers(startNum, endNum - 1);
    // Додаємо endNum до масиву
    rangeArray.push(endNum);
    return rangeArray; // Повертаємо результат
  }
}

/* Приклади виклику функції
console.log(rangeOfNumbers(1, 5)); // Виведе: [1, 2, 3, 4, 5]
console.log(rangeOfNumbers(4, 4)); // Виведе: [4]
console.log(rangeOfNumbers(3, 7)); // Виведе: [3, 4, 5, 6, 7]
Пояснення:
Базовий випадок: Коли startNum дорівнює endNum, ми повертаємо масив, що містить лише це число. Це зупиняє рекурсію.
Рекурсивний виклик: Функція викликає саму себе, зменшуючи endNum на 1, щоб отримати масив чисел до endNum.
Додавання до масиву: Після отримання масиву від рекурсивного виклику ми використовуємо метод push, щоб додати endNum до кінця масиву.
Повернення масиву: В кінці функція повертає сформований масив.
Таким чином, ви отримаєте масив цілих чисел у правильному порядку, незалежно від того, чи startNum та endNum однакові.
*/