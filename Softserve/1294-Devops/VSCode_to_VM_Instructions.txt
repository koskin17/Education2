
Подключение VSCode к виртуальной машине (VM) с Ubuntu требует настройки SSH-доступа и установки необходимых расширений. Вот подробная инструкция:

---

### 1. Убедись, что VM настроена и работает
1. Убедись, что виртуальная машина включена и доступна.
2. Проверь IP-адрес виртуальной машины:
   ```bash
   ifconfig
   ```
   или
   ```bash
   ip addr
   ```
   Найди IP-адрес в интерфейсе, например `192.168.1.100`.

---

### 2. Настрой SSH-доступ на VM
1. Установи OpenSSH-сервер на виртуальной машине:
   ```bash
   sudo apt update
   sudo apt install openssh-server -y
   ```
2. Убедись, что служба SSH запущена:
   ```bash
   sudo systemctl enable ssh
   sudo systemctl start ssh
   sudo systemctl status ssh
   ```
   Если SSH не запускается, проверь конфигурацию:
   ```bash
   sudo nano /etc/ssh/sshd_config
   ```
   Убедись, что строки выглядят так:
   ```
   PermitRootLogin yes
   PasswordAuthentication yes
   ```
   После изменений перезапусти службу:
   ```bash
   sudo systemctl restart ssh
   ```

3. Проверь SSH-доступ с хоста (где установлен VSCode):
   ```bash
   ssh username@192.168.1.100
   ```
   Замени `username` на пользователя Ubuntu. Если соединение установлено, переходи к следующему шагу.

---

### 3. Установи VSCode и расширение Remote - SSH
1. Убедись, что VSCode установлен на хосте. Скачать можно [здесь](https://code.visualstudio.com/).
2. Установи расширение **Remote - SSH**:
   - В VSCode открой вкладку **Extensions** (Ctrl+Shift+X).
   - Найди и установи **Remote - SSH**.

---

### 4. Настрой файл SSH-конфигурации на хосте
1. Найди или создай файл конфигурации SSH:
   - На Windows: `C:\Users\<твой_пользователь>\.ssh\config`
   - На Linux/Mac: `~/.ssh/config`

2. Добавь в него информацию о виртуальной машине:
   ```plaintext
   Host ubuntu-vm
       HostName 192.168.1.100
       User username
       IdentityFile ~/.ssh/id_rsa
   ```
   Замени `192.168.1.100` на IP твоей VM и `username` на пользователя Ubuntu.

3. Сгенерируй SSH-ключ (если его нет):
   ```bash
   ssh-keygen -t rsa -b 4096
   ```
   По умолчанию ключи сохраняются в `~/.ssh/id_rsa`.

4. Скопируй публичный ключ на VM:
   ```bash
   ssh-copy-id username@192.168.1.100
   ```

5. Проверь, что ты можешь подключиться без пароля:
   ```bash
   ssh ubuntu-vm
   ```

---

### 5. Подключение к VM из VSCode
1. Открой VSCode.
2. Нажми **F1** (или Ctrl+Shift+P) и введи:
   ```
   Remote-SSH: Connect to Host...
   ```
3. Выбери хост `ubuntu-vm` из списка (если его нет, добавь вручную).
4. Подожди, пока VSCode установит необходимые серверные компоненты на VM.

---

### 6. Установи дополнительные инструменты
#### На виртуальной машине:
1. Установи Python (если требуется):
   ```bash
   sudo apt install python3 python3-pip -y
   ```
2. Установи Git:
   ```bash
   sudo apt install git -y
   ```
3. Установи другие зависимости для разработки, если нужно:
   ```bash
   sudo apt install build-essential -y
   ```

#### На хосте:
1. В VSCode установи расширения:
   - **Python** (для работы с Python-кодом).
   - **GitLens** (для работы с Git).

---

### 7. Проверка и устранение проблем
1. **Проблема: SSH не работает.**
   - Проверь доступность порта 22:
     ```bash
     sudo ufw allow 22
     ```
   - Проверь брандмауэр (если есть).

2. **Проблема: VSCode не подключается.**
   - Проверь лог файла:
     - В VSCode: нажми на **Output** (внизу) и выбери **Remote-SSH**.
   - Убедись, что `sshd` запущен на VM.

3. **Проблема: Ошибка "Permission denied".**
   - Проверь права доступа к файлу `~/.ssh/id_rsa`:
     ```bash
     chmod 600 ~/.ssh/id_rsa
     ```

---

После выполнения всех шагов ты сможешь подключиться к виртуальной машине из VSCode и использовать её как удалённый сервер для разработки. Если что-то не получится, напиши, разберёмся!
