Package Management
Package Management is the key admin activity that most of the time as a DevOps guy we deal with. We need to install / update the packages all the time.

In RedHat OS and its family like CentOS, they use RPM (Redhat Package Manager), So the softwares we download will have an extension ending with .rpm like .msi in windows.

In Ubuntu OS and its family like Mint, they use apt, apt-get, dpkg. So the softwares we download will have an extension ending with .deb .

First, In case if we want to list out the packages which are installed in your system then..

sudo apt list --installed
You can also display all packages available for the Linux operating system. To do this, enter the command apt list with the option --all-versions in the command line:

sudo apt list --all-versions
To install a package
sudo apt install nginx
Above command will interrupt for an input whether to proceed with an installation or not. To avoid the interruption we can use -y option.

sudo apt install nginx -y
To remove / erase a package in the system

sudo apt remove nginx -y
sudo apt autoremove
Let's try to figure out why the utility has as many as two uninstall commands. According to their purpose, they differ in the following features of work:

apt remove — removes all binary files of the package, but saves files with settings;
apt purge — deletes both the package itself and its settings files.
To update the complete system

sudo apt update -y
However, if you wondered that how yum in managing the installation, You will see that it is downloading the package and installing it. But from where it is downloading?

Command apt will refer the repos available under /etc/apt/source.list* files and reach out to only those destinations to download the files.

Let us understand it through a situation.