Команды Linux:
- ls - список файлов;
- pwd - место, где мы сейчас находимся;
- touch  1.sh - создать файл. Также можно написать touch 1.sh 2.sh и т.д. и будет создано 2 файла подряд, т.е. команды выполняются конвейером;
	Также файл можно создать командой "echo "Some text" > file2.txt" - создастся файл и в него будет записан какой-то текст;
- ls -la - позволяет увидеть структура хранения файлов. Также можно написать просто "ll";
	После этой команды будет выведена структура файловой системы:
	drwx------  5 root root 4096 Nov 18 08:10 ./
	drwxr-xr-x 19 root root 4096 Nov  6 12:21 ../
	-rw-------  1 root root   20 Nov 13  2022 .bash_history
	-rw-r--r--  1 root root 3208 Nov  6 12:21 .bashrc
	-rw-r--r--  1 root root  161 Dec  5  2019 .profile
	drwx------  2 root root 4096 Nov  6 12:19 .ssh/
	drwxr-xr-x  4 root root 4096 Nov 18 08:09 .theia/
	-rw-r--r--  1 root root  109 Nov  6 12:21 .vimrc
	-rw-r--r--  1 root root    0 Nov 18 08:10 1.sh
	-rw-r--r--  1 root root    0 Nov 18 08:10 2.sh
	lrwxrwxrwx  1 root root    1 Nov  6 12:21 filesystem -> //
	drwx------  3 root root 4096 Nov 18 08:01 snap/

	Имена файлов и папок, которые начинаются с точки "." - это скрытые файлы.

- ls /etc - что внутри каталога, к примеру "etc";
- uname -a / uname -all - показывает информацию про операционную систему;
- cat /etc/*release - полная инфоормация про систему;
- cat /proc/cpuinfo - полная информация про CPU;
- cat /proc/meminfo - полная информация про память;
- lsblk - полная информация про диск;
- uname -i - проверка архитектуры 32bit or 64bit;
- rm "Имя файла" - удаляет файл из системы;

В каталоге "proc" лежат все исполняемые в данный момент программы.

Со всей этой информацией можно понять с какой машиной и какой системой мы имеем дело.

--i, --inode - при такой команде будет выведен список с цифрами в начале каждой строки:
	   1539 drwx------  5 root root 4096 Nov 18 08:28 .
		  2 drwxr-xr-x 19 root root 4096 Nov  6 12:21 ..
	  64433 -rw-------  1 root root   20 Nov 13  2022 .bash_history
	   1541 -rw-r--r--  1 root root 3208 Nov  6 12:21 .bashrc
	   1540 -rw-r--r--  1 root root  161 Dec  5  2019 .profile
	 258055 drwx------  2 root root 4096 Nov  6 12:19 .ssh
	 789581 drwxr-xr-x  4 root root 4096 Nov 18 08:12 .theia
	   1611 -rw-r--r--  1 root root  109 Nov  6 12:21 .vimrc
	  16546 -rw-r--r--  1 root root   10 Nov 18 08:28 file2.txt
	   3844 lrwxrwxrwx  1 root root    1 Nov  6 12:21 filesystem -> /
	1035214 drwx------  3 root root 4096 Nov 18 08:04 snap
	
	Эти цифры - это номера файлов, под которыми они сохраняются в  Unix системе. При этом имя у файла в Unix системе может быть не одно. Их может быть несколько. И это "второе" имя называется hardlink файла.
	
	Важно помнить, что softlink привязан к файлу по имени, а вот hardlink по ID / inode/.
	Удалить файл полностью с диска нельзя до тех пор, пока есть хотя бы одно имя.
	
	Для создания ссылок на файлы, как в Windows, в Unix есть команда ln.
	Записывается ln -s - "-s" означает soft link или мягкая ссылка / просто ссылка на файл.
	К примеру, ln -s 1soft.sh 1s.sh - будет созданная ссылка 1soft на файл 1s.
	Список файлов будет выглядеть вот так:
	drwx------  5 root root 4096 Nov 18 08:38 .
	drwxr-xr-x 19 root root 4096 Nov  6 12:21 ..
	-rw-------  1 root root   20 Nov 13  2022 .bash_history
	-rw-r--r--  1 root root 3208 Nov  6 12:21 .bashrc
	-rw-r--r--  1 root root  161 Dec  5  2019 .profile
	drwx------  2 root root 4096 Nov  6 12:19 .ssh
	drwxr-xr-x  4 root root 4096 Nov 18 08:12 .theia
	-rw-r--r--  1 root root  109 Nov  6 12:21 .vimrc
	lrwxrwxrwx  1 root root    8 Nov 18 08:38 1s.sh -> 1soft.sh - вот ссылка на файл
	-rw-r--r--  1 root root   10 Nov 18 08:28 file2.txt
	lrwxrwxrwx  1 root root    1 Nov  6 12:21 filesystem -> /
	drwx------  3 root root 4096 Nov 18 08:04 snap
	
	drwx------  5 root root 4096 Nov 18 08:41 .
	drwxr-xr-x 19 root root 4096 Nov  6 12:21 ..
	-rw-------  1 root root   20 Nov 13  2022 .bash_history
	-rw-r--r--  1 root root 3208 Nov  6 12:21 .bashrc
	-rw-r--r--  1 root root  161 Dec  5  2019 .profile
	drwx------  2 root root 4096 Nov  6 12:19 .ssh
	drwxr-xr-x  4 root root 4096 Nov 18 08:12 .theia
	-rw-r--r--  1 root root  109 Nov  6 12:21 .vimrc
	lrwxrwxrwx  1 root root    8 Nov 18 08:38 1s.sh -> 1soft.sh - - вот ссылка на файл
	-rw-r--r--  1 root root    0 Nov 18 08:41 1soft.sh
	-rw-r--r--  1 root root   10 Nov 18 08:28 file2.txt
	lrwxrwxrwx  1 root root    1 Nov  6 12:21 filesystem -> /
	drwx------  3 root root 4096 Nov 18 08:04 snap
	
	При создании ссылки очень важно помнить о том, что это 2 разных файла.
	Это видно по цифрам ,которые являются ID файлов.
	
Чтобы посмотреть информацию о пользователях используется команда cat -n /etc/passwd.
Если добавить ключ "-n", то все строку будут пронумерованы. Это ни на что не влияет, а смотреть список удобно.

Для поиска информации применяется команда "grep".

Для выхода из редактора Vi (Vim) нужно нажать Esc, потом набрать двоеточие ":" (если надо записать изменения, то пишется "w" и "q" - :wq). Если не надо сохранять, то: Esc + : q! - восклицательный знак - это выход без сохранения.

Для создания конвейера из команд, т.е. чтобы они исполнялись одна за другой, используется вертикальная черта "|" или pipe между командами.

Для создания пользователя используется команда useradd: useradd masha.
Но при такой команде не создаётся домашний каталог пользователя. Для того, чтобы его создать используется команда useradd -m masha.
Если надо, чтобы домашний каталог пользователя отличался от стандартного в системе, то используется полный синтаксис команды: useradd -s /bin/bash -d /home/newname -m newname.

Также можно использовать команду adduser. Эта команда создаёт группу, пользователя, home каталог пользователя, скопировала файлы from '/etc/skel' и сразу просит пароль + полное имя + room number + номера телефонов и т.д.

Создание bash-скрипта:
#! /bin/bash - это признак того, что это bash-скрипт и его нужно выполнить
echo "Hi, All!"
После создания файл еще не исполняемый. После его создания нужно выполнить команду: sudo chmod 744 1.sh
После этого этот файл можно запустить: ./1.sh (./ - это указание местоположения файла - текущий каталог).

Для того, чтобы пользователь имел права администратора он должен принадлежать группе sudo.
Чтобы изменить собственника и группу для файла на root нужно написать: sudo chown root:root new.txt

Получить права супер-пользователя - sudo su