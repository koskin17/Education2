''' Дана последовательность цифр в виде списке, заключённого в словарь.
Необходимо найти неуникальный элемент в этом перечне '''
arr1 = ([ 3, 10, 3, 3, 3 ])


def find_uniq(arr):
    arr = list(arr)
    n1 = arr[0]
    n2 = arr[0]
    count1 = 1
    count2 = 0
    for i in range(1, len(arr)):
        if n1 == arr[i]:
            n1 = n1
            count1 +=1
        elif n1 != arr[i]:
            n2 = arr[i]
            count2 += 1
    if count1 > count2:
        return n2
    return n1

print(find_uniq(arr))
print()

''' Второй варинат '''

arr2 = ([ 0, 0, 0.55, 0, 0 ])
def find_uniq(arr2):
    a, b = set(arr2)                        # если список переформатировать в множество, то в множестве останется только 2 элемента: уникальный и не уникальный.
                                            # в списке элементов много и они перемешаны, а в множестве их кол-во сокращается до 2.
                                            # при такой записи один элемент будет присвоем переменной "а", второй - переменной "b"
    return a if arr2.count(a) == 1 else b   # считаем кол-во а в изначальном списке и если оно равно 1, т.е. элемент уникальный, то возвращаем его, инача элемент b - уникальный

print(find_uniq(arr2))
print()
