# Для подсчёта кол-ва элементов в последовательности можно использовать метод Counter
# из модуля itertools.
from collections import Counter

lst = ['a', 'a', 'a', 'a', 'b', 'b', 'c', 'c', 'c', 'd', 'd', 'e']
count = Counter(lst)  # определяем объект для расчёта
# Это для простоты и понятности. Везде далее в коде вместо count можно было бы указывать Count(lst) и
# Count(lst).most_common(), но это длинно и намного удобнее создать объект и потом с ним
# выполнять все действия
print("Кол-во всех элементов в последовательности (списке):", count)
print("Получение кол-ва конкретного элемента в последовательности:", count['c'])
print("Получение элементов с частотностью в последовательности:", count.most_common())
# Метод most_common возвращает сортированный по убыванию список кортежей (элемент, кол-во).
# Если не указывать параметр, который является индексом кортежа в полученном списке,
# то возвращается весь кортеж.
# Если же указать параметр - most_common(1), к примеру, то получим первый кортеж в списке, т.е.
# кортеж с наиболее частотным элементом.
print("Наиболее частотный элемент в последовательности (с индексом 1 в сортированном по убыванию списке "
      "кортежей):", count.most_common(1))
