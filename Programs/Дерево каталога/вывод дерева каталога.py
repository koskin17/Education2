import os
'''
Функция os.walk проходится по всем вложенным файлам и папкам внутри головной папки (которая передаётся в качестве параметра) и ВСЕГДА возвращает кортежи:
    - (путь к папке относительно головной (str), [список вложенных папок (каждая - str)], [список файлов в текущей папке (каждый - str)]).

    Если есть вложенная папка, то следующий кортеж будет в точности как первый:
    - (путь к папке относительно головной (str), т.е. головная + папка,
        [список вложенных папок (каждая - str)],
            [список файлов в текущей папке (каждый - str)])

ВСЕГДА возвращается кортеж из 3 элементов:
- папка или путь вложенной папке,
- список вложенных папок,
- список файлов в папке.

Его можно распаковать в переменные 3 переменные. В данном случае:
    - root - наименование папки или путь к ней;
    - dirs - наименования вложенных папок;
    - files - наименования файлов в каждой папке.
'''

print('Кортежи, которые возвращает фукнция os.walk()')
def read_dir1(folder):
    for root, dirs, files in os.walk(folder):
        print(root, dirs, files)

read_dir1('folder')
print()

'''
Level - переменная, в которую сохраняется подчитанный отступ для получения дерева каталога.
Считается отступ по кол-ву разделителей в пути к папке. Определить разделитель, независимо от операционной системы, позволяет функция os.sep.
Таким образов в level сохраняется кол-во разделителей в пути к папке.
После этого в indent (отступ) считается кол-во пробелов для каждого уровня вложенности.
Т.е.:
    - путь к головной папке содержит только наименование папки, без разделителей. Indent при умножении на ноль даёт ноль;
    - для папки с первым уровнем вложенности в пути к этой папке один слэш, т.е. indent (отступ) будет равен 4 пробелам;
    - для папки со вторым уровнем вложенности (два слэша в пути к папке) отступ будет равен 8 пробелам
    - и т.д.

Для выведения только названия папки, без длинного пути к ней, используется функция os.path.basename() (базовое имя), в которую передаётся root,
а в root при распаковке кортежа хранится путь к папке (головной или вложенной).
Т.е. функция os.path.basename() из переданного значения "вырезает" базовое имя в отображает его.
'''
def read_dir(folder):
    for root, dirs, files in os.walk(folder):
        level = root.count(os.sep)
        indent = ' ' * 4 * level
        print(f'{indent}[{os.path.basename(root)}]')
        sub_indent = ' ' * 4 * (level + 1)
        ''' Вывод наименования файлов в дереве каталогов и файлов в папке '''
        for file in files:
            print(f'{sub_indent}{file}')
        

read_dir('folder')
